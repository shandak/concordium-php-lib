<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: concordium_p2p_rpc.proto

namespace Concordium;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A peer node.
 *
 * Generated from protobuf message <code>concordium.PeerElement</code>
 */
class PeerElement extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue node_id = 1;</code>
     */
    private $node_id = null;
    /**
     * The port of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt32Value port = 2;</code>
     */
    private $port = null;
    /**
     * The IP of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue ip = 3;</code>
     */
    private $ip = null;
    /**
     * The current status of the peer.
     *
     * Generated from protobuf field <code>.concordium.PeerElement.CatchupStatus catchup_status = 4;</code>
     */
    private $catchup_status = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\StringValue $node_id
     *           The id of the node.
     *     @type \Google\Protobuf\UInt32Value $port
     *           The port of the node.
     *     @type \Google\Protobuf\StringValue $ip
     *           The IP of the node.
     *     @type int $catchup_status
     *           The current status of the peer.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ConcordiumP2PRpc::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue node_id = 1;</code>
     * @return \Google\Protobuf\StringValue
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * The id of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue node_id = 1;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setNodeId($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->node_id = $var;

        return $this;
    }

    /**
     * The port of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt32Value port = 2;</code>
     * @return \Google\Protobuf\UInt32Value
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     * The port of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt32Value port = 2;</code>
     * @param \Google\Protobuf\UInt32Value $var
     * @return $this
     */
    public function setPort($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt32Value::class);
        $this->port = $var;

        return $this;
    }

    /**
     * The IP of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue ip = 3;</code>
     * @return \Google\Protobuf\StringValue
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * The IP of the node.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue ip = 3;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setIp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->ip = $var;

        return $this;
    }

    /**
     * The current status of the peer.
     *
     * Generated from protobuf field <code>.concordium.PeerElement.CatchupStatus catchup_status = 4;</code>
     * @return int
     */
    public function getCatchupStatus()
    {
        return $this->catchup_status;
    }

    /**
     * The current status of the peer.
     *
     * Generated from protobuf field <code>.concordium.PeerElement.CatchupStatus catchup_status = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setCatchupStatus($var)
    {
        GPBUtil::checkEnum($var, \Concordium\PeerElement_CatchupStatus::class);
        $this->catchup_status = $var;

        return $this;
    }

}

