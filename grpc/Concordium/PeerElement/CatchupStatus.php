<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: concordium_p2p_rpc.proto

namespace Concordium\PeerElement;

/**
 * Protobuf type <code>concordium.PeerElement.CatchupStatus</code>
 */
class CatchupStatus
{
    /**
     * The peer does not have any data unknown to us. If we receive a message from the
     * peer that refers to unknown data (e.g., an unknown block) the peer is marked as pending.
     *
     * Generated from protobuf enum <code>UPTODATE = 0;</code>
     */
    const UPTODATE = 0;
    /**
     * The peer might have some data unknown to us. A peer can be in this state either because
     * it sent a message that refers to data unknown to us, or before we have established a baseline with it.
     * The latter happens during node startup, as well as upon protocol updates until the initial catchup handshake
     * completes.
     *
     * Generated from protobuf enum <code>PENDING = 1;</code>
     */
    const PENDING = 1;
    /**
     * The node is currently catching up by requesting blocks from this peer.
     * There will be at most one peer with this status at a time.
     * Once the peer has responded to the request, its status will be changed to:
     * - 'UPTODATE' if the peer has no more data that is not known to us
     * - 'PENDING' if the node has more data that is unknown to us.
     *
     * Generated from protobuf enum <code>CATCHINGUP = 2;</code>
     */
    const CATCHINGUP = 2;
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CatchupStatus::class, \Concordium\PeerElement_CatchupStatus::class);

