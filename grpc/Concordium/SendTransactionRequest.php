<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: concordium_p2p_rpc.proto

namespace Concordium;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Submit a transaction to the node. The transaction is subject to basic validation
 * and is then relayed to all the peers.
 *
 * Generated from protobuf message <code>concordium.SendTransactionRequest</code>
 */
class SendTransactionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The network id (currently not used in this request).
     *
     * Generated from protobuf field <code>uint32 network_id = 1;</code>
     */
    private $network_id = 0;
    /**
     * The transaction payload in binary encoding.
     * The encoding of certain transaction types, along with the general payload structure,
     * is described at: https://developer.concordium.software/en/mainnet/net/references/grpc.html.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     */
    private $payload = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $network_id
     *           The network id (currently not used in this request).
     *     @type string $payload
     *           The transaction payload in binary encoding.
     *           The encoding of certain transaction types, along with the general payload structure,
     *           is described at: https://developer.concordium.software/en/mainnet/net/references/grpc.html.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ConcordiumP2PRpc::initOnce();
        parent::__construct($data);
    }

    /**
     * The network id (currently not used in this request).
     *
     * Generated from protobuf field <code>uint32 network_id = 1;</code>
     * @return int
     */
    public function getNetworkId()
    {
        return $this->network_id;
    }

    /**
     * The network id (currently not used in this request).
     *
     * Generated from protobuf field <code>uint32 network_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNetworkId($var)
    {
        GPBUtil::checkUint32($var);
        $this->network_id = $var;

        return $this;
    }

    /**
     * The transaction payload in binary encoding.
     * The encoding of certain transaction types, along with the general payload structure,
     * is described at: https://developer.concordium.software/en/mainnet/net/references/grpc.html.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * The transaction payload in binary encoding.
     * The encoding of certain transaction types, along with the general payload structure,
     * is described at: https://developer.concordium.software/en/mainnet/net/references/grpc.html.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload = $var;

        return $this;
    }

}

